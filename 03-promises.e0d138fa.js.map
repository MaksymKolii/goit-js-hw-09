{"mappings":"MAOI,EACAA,EARe,IAUnB,IAAK,IAAIC,EAAI,EAAGA,EATA,EASaA,GAAK,EAChCC,EAAcC,EAAUH,GACvBI,MAAK,EAAGC,SAAAC,EAAUC,MAAAC,MACjBC,QAAQC,IAAI,uBAAqBJ,QAAiBE,MAAU,IAE7DG,OAAM,EAAGN,SAAAO,EAAUL,MAAAM,MAClBJ,QAAQC,IAAI,sBAAoBE,QAAiBC,MAAU,IAE7Db,GAhBW,IAiBXG,GAAY,EAGd,SAASD,EAAcY,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAACf,SAAAS,EAAUP,MAAAQ,IAEnBM,EAAO,CAAChB,SAAAS,EAAUP,MAAAQ,GAAO,GAE1BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = 1000;\nconst ammount = 6;\nconst step = 3000;\n\n/* Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount.\n При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую \n задержку (delay) и шаг (step).*/\nlet position = 1;\nlet delay = firstDelay;\n\nfor (let i = 0; i < ammount; i += 1) {\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += step;\n  position += 1;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$47d4ff9957288465$var$delay","i","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$position","then","position","position1","delay","delay1","console","log","catch","position2","delay2","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.e0d138fa.js.map"}