{"mappings":"oeAIA,IAAAA,EAAAC,EAAA,SAiEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,EAzED,CAEVQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GAEpBA,EAAEC,iBAWF,IAAIC,EAAW,EACf,MAAOC,EAAYC,OAAOJ,EAAEK,cAAcC,SAASlB,MAAMmB,OACnDC,EAASJ,OAAQJ,EAAEK,cAAcC,SAASE,OAAOD,OACjDE,EAAOL,OAAOJ,EAAEK,cAAcC,SAASG,KAAKF,OAClD,IAAIG,EAAQP,EAEZ,IAAK,IAAIQ,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC/BzB,EAAcgB,EAAUQ,GACvBE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,QAAQC,IAAI,uBAAqB3B,QAAiBC,OAClDJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClByB,QAAQC,IAAI,sBAAoB3B,QAAiBC,OACjDJ,EAAA+B,OAAOG,QAAQ,sBAAoB/B,QAAiBC,MAAU,IAEhEsB,GAASD,EACTP,GAAY,EAGdF,EAAEK,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["//const firstDelay = 1000;\n//const amount = 6;\n// const step = 200;\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs ={\n\n  form: document.querySelector('.form')\n}\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(e){\n\n  e.preventDefault();\n\n  // if (\n  //   !e.currentTarget.elements.delay.value ||\n  //   !e.currentTarget.elements.step.value ||\n  //   !e.currentTarget.elements.amount.value\n  // ) {\n  //   return alert('Please input data!');\n  // }\n  \n\n  let position = 1;\n  const  firstDelay =Number(e.currentTarget.elements.delay.value)\n  const amount = Number( e.currentTarget.elements.amount.value)\n  const step = Number(e.currentTarget.elements.step.value)\n  let delay = firstDelay;\n  \n  for (let i = 0; i < amount; i += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n    position += 1;\n  }\n\n  e.currentTarget.reset();\n}\n\n/* Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount.\n При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую \n задержку (delay) и шаг (step).*/\n// let position = 1;\n// const  firstDelay = e.currentTarget.elements.delay.value\n// const amount = e.currentTarget.elements.amount.value\n// const step = e.currentTarget.elements.step.value\n// let delay = firstDelay;\n\n// for (let i = 0; i < amount; i += 1) {\n//   createPromise(position, delay)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n//   delay += step;\n//   position += 1;\n// }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","position1","firstDelay","Number","currentTarget","elements","value","amount","step","delay1","i","then","console","log","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.9c194025.js.map"}