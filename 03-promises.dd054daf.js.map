{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EA/CA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GAGpB,GAFAA,EAAEC,iBAGAC,OAAOF,EAAEG,cAAcC,SAAShB,MAAMiB,OAAS,GAC/CH,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAAS,GAC9CH,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAAS,EAEhD,OAAOrB,EAAAwB,OAAOC,QAAQ,kBAGxB,MAAMC,EAAaR,OAAOF,EAAEG,cAAcC,SAAShB,MAAMiB,OACnDE,EAASL,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAChDC,EAAOJ,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAClD,IAAIM,EAAQD,EAEZ,IAAK,IAAIE,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACrD1B,EAAc0B,EAAUD,GACrBE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,QAAQC,IAAI,uBAAqB5B,QAAiBC,OAClDJ,EAAAwB,OAAOQ,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,QAAQC,IAAI,sBAAoB5B,QAAiBC,OACjDJ,EAAAwB,OAAOU,QAAQ,sBAAoB/B,QAAeC,MAAU,IAEhEuB,GAASL,EAGXN,EAAEG,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  if (\n    Number(e.currentTarget.elements.delay.value) < 0 ||\n    Number(e.currentTarget.elements.step.value) < 0 ||\n    Number(e.currentTarget.elements.amount.value) < 0\n  ) {\n    return Notify.warning('Not valid data');\n  }\n\n  const firstDelay = Number(e.currentTarget.elements.delay.value);\n  const amount = Number(e.currentTarget.elements.amount.value);\n  const step = Number(e.currentTarget.elements.step.value);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","elements","value","step","amount","Notify","warning","firstDelay","delay1","position1","then","console","log","success","catch","failure","reset"],"version":3,"file":"03-promises.dd054daf.js.map"}