{"mappings":"YAUA,IAVA,I,EAOI,EACAA,EARe,IAUVC,EAAI,EAAGA,EATA,EASaA,GAAK,EAChCC,EAAcC,EAAUH,GACvBI,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALI,MACjBC,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANJ,EAAM,M,IAE3DK,OAAM,SAAAR,G,IAAGS,EAAQT,EAARE,SAAUQ,EAAKV,EAALI,MAClBC,QAAQC,IAAI,sBAAuCC,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,IAE3Df,GAhBW,IAiBXG,GAAY,EAGd,SAASD,EAAcc,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACf,SAAAS,EAAUP,MAAAQ,IAEnBM,EAAO,CAAChB,SAAAS,EAAUP,MAAAQ,G,GAEnBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = 1000;\nconst ammount = 6;\nconst step = 3000;\n\n/* Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount.\n При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую \n задержку (delay) и шаг (step).*/\nlet position = 1;\nlet delay = firstDelay;\n\nfor (let i = 0; i < ammount; i += 1) {\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += step;\n  position += 1;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$i","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$position","then","param","position1","position","delay1","delay","console","log","concat","catch","position2","delay2","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.37166778.js.map"}