{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KA/CM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GAGpB,GAFAA,EAAEC,iBAGAC,OAAOF,EAAEG,cAAcC,SAAShB,MAAMiB,OAAS,GAC/CH,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAAS,GAC9CH,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAAS,EAEhD,OAAOrB,EAAAwB,OAAOC,QAAQ,kBAQxB,IALA,IAAMC,EAAaR,OAAOF,EAAEG,cAAcC,SAAShB,MAAMiB,OACnDE,EAASL,OAAOF,EAAEG,cAAcC,SAASG,OAAOF,OAChDC,EAAOJ,OAAOF,EAAEG,cAAcC,SAASE,KAAKD,OAC9CM,EAAQD,EAEHE,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACrD1B,EAAc0B,EAAUD,GACrBE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,QAAQC,IAAI,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OAC1DJ,EAAAwB,OAAOU,QAAQ,uBAAwCD,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE9D+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,QAAQC,IAAI,sBAAuCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,OACzDJ,EAAAwB,OAAOY,QAAQ,sBAAqCH,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAE9DuB,GAASL,EAGXN,EAAEG,cAAckB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  if (\n    Number(e.currentTarget.elements.delay.value) < 0 ||\n    Number(e.currentTarget.elements.step.value) < 0 ||\n    Number(e.currentTarget.elements.amount.value) < 0\n  ) {\n    return Notify.warning('Not valid data');\n  }\n\n  const firstDelay = Number(e.currentTarget.elements.delay.value);\n  const amount = Number(e.currentTarget.elements.amount.value);\n  const step = Number(e.currentTarget.elements.step.value);\n  let delay = firstDelay;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","elements","value","step","amount","Notify","warning","firstDelay","delay1","position1","then","param","console","log","concat","success","catch","failure","reset"],"version":3,"file":"03-promises.0e135c41.js.map"}