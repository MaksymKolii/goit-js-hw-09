{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA2CA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,KAnDK,CAEVQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GAEpBA,EAAEC,iBAiBF,IANA,IACOC,EAAYC,OAAOH,EAAEI,cAAcC,SAASjB,MAAMkB,OACnDC,EAASJ,OAAQH,EAAEI,cAAcC,SAASE,OAAOD,OACjDE,EAAOL,OAAOH,EAAEI,cAAcC,SAASG,KAAKF,OAC9CG,EAAQP,EAEHQ,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDxB,EAAcwB,EAAUD,GACvBE,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OAC1DJ,EAAAgC,OAAOC,QAAQ,uBAAwCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D8B,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAuCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,OACzDJ,EAAAgC,OAAOG,QAAQ,sBAAqCJ,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE5DqB,GAASD,EAGXR,EAAEI,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs ={\n\n  form: document.querySelector('.form')\n}\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(e){\n\n  e.preventDefault();\n\n  // if (\n  //   !e.currentTarget.elements.delay.value ||\n  //   !e.currentTarget.elements.step.value ||\n  //   !e.currentTarget.elements.amount.value\n  // ) {\n  //   return alert('Please input data!');\n  // }\n  \n\n  let position = 1;\n  const  firstDelay =Number(e.currentTarget.elements.delay.value)\n  const amount = Number( e.currentTarget.elements.amount.value)\n  const step = Number(e.currentTarget.elements.step.value)\n  let delay = firstDelay;\n  \n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","currentTarget","elements","value","amount","step","delay1","position1","then","param","console","log","concat","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.a5a56a37.js.map"}